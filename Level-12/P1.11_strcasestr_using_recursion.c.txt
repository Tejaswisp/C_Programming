/* â€¢	strcasestr - find a substring, implement using recursion*/

#include<stdio.h>
#include<string.h>
#define N 50 

char *my_strcasestr(char *str,char *search,int i);

int main()
{
    char str[N],search[N];
    printf("Enter source string : ");
    fgets(str,N,stdin);
    printf("Enter string to be searched : ");
    fgets(search,N,stdin);
    char *ptr = my_strcasestr(str,search,0);
    if(ptr == NULL)
    printf("String not found\n");
    else
    printf("%s\n",ptr);
    return 0;
}

char *my_strcasestr(char *str,char *search,int i)
{
    if(str[i] != '\0' && str[i] != '\n')
    {
        if(str[i] >= 65 && str[i] <= 90)
        str[i] = str[i]+32;
        if(search[0] >=65 && search[0] <= 90)
        search[0] = search[0]+32;
        
        if(str[i] != search[0]) 
        my_strcasestr(str,search,++i);
        else 
        {
            int j=0;
            while(search[j] !=  '\0' && search[j] != '\n')
            {
                if(str[i+j] >= 65 && str[i+j] <= 90)
                str[i+j] = str[i+j]+32;
                if(search[j] >= 65 && search[j] <= 90)
                search[j] = search[j]+32;
                if((str[i+j] != search[j]))
                {
                    return NULL;
                }
                j++;
            }
            return str+i;
        }
    }
}