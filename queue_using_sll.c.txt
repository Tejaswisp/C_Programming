/*  Program to implement Queues using Single linked lists  */

#include<stdio.h>
#include<stdlib.h>

struct queue  
{
    int data;
    struct queue *next;
};

void enqueue(struct queue **front,struct queue **rear,int data);
void print(struct queue **front,struct queue **rear);
void dequeue(struct queue **front,struct queue **rear);
void front_ele(struct queue **front);

int main()
{
    struct queue *front = NULL;
    struct queue *rear = NULL;
    int choice,data;
    while(1)
    {
        printf("Enter choice:\n");
        printf("1.enqueue\n2.dequeue\n3.front_ele\n4.print\n5.exit\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1: printf("Enter data: ");
            scanf("%d",&data);
            enqueue(&front,&rear,data);
            break;
            case 2: dequeue(&front,&rear);
            break;
            case 3: front_ele(&front);
            break;
            case 4: print(&front,&rear);
            break;
            case 5: exit(0);
            break;
        }
    }
    return 0;
}

void enqueue(struct queue **front,struct queue **rear,int data)
{
    struct queue *newnode;
    newnode = (struct queue *)malloc(sizeof(struct queue));
    if(newnode == NULL)
    printf("Queue is empty\n");
    else
    {
        newnode->data = data;
        newnode->next = NULL;
        if(*front == NULL && *rear == NULL)
        {
            *front = newnode;
            *rear = newnode;
        }
        else 
        {
            (*rear)->next = newnode;
            *rear = newnode;
        }
    }
}

void print(struct queue **front,struct queue **rear)
{
    if(*front == NULL && *rear == NULL)
    printf("Queue is empty\n");
    else 
    {
        struct queue *temp = *front;
        printf("Queue contains:\n");
        while(temp != NULL)
        {
            printf("%d ",temp->data);
            temp = temp->next;
        }
        printf("\n");
    }
}

void dequeue(struct queue **front,struct queue **rear)
{
    struct queue *temp;
    if(*front == NULL && *rear == NULL)
    printf("Queue is empty\n");
    else 
    {
        temp = *front;
        *front = (*front)->next;
        free(temp);
    }
}

void front_ele(struct queue **front)
{
    if(*front == NULL)
    printf("Queue is empty\n");
    else 
    {
        printf("Front element in the queue is : %d\n",(*front)->data);
    }
}