/* Implement heap sort algorithm to sort an array in decreasing way */

#include <stdio.h> 
#define N 50

void heapify(int arr[], int n, int i) 
{ 
	int temp, max, left_index, right_index; 
	max = i; 
	right_index = 2 * i + 2; 
	left_index = 2 * i + 1; 
	if(left_index < n && arr[left_index] < arr[max]) 
		max = left_index; 
	if(right_index < n && arr[right_index] < arr[max]) 
		max = right_index; 
	if(max != i) 
	{ 
		temp = arr[i]; 
		arr[i] = arr[max]; 
		arr[max] = temp; 
		heapify(arr, n, max); 
	} 
} 

void heapsort(int arr[], int n) 
{ 
	int i, temp; 
	for (i = n / 2 - 1; i >= 0; i--) 
	{ 
		heapify(arr, n, i); 
	} 
	for (i = n - 1; i > 0; i--) 
	{ 
		temp = arr[0]; 
		arr[0] = arr[i]; 
		arr[i] = temp; 
		heapify(arr, i, 0); 
	} 
} 

int main() 
{ 
	int arr[N],i,n;
	printf("Enter number of elements in the array: ");
	scanf("%d",&n);
    printf("Enter array elements: ");
    for(i=0; i<n; i++)
    {
        scanf("%d",&arr[i]);
    }
	heapsort(arr, n); 

	printf("After sorting:\n "); 
	for (int i = 0; i < n; i++) { 
		printf("%d ", arr[i]); 
	} 
	return 0; 
}
