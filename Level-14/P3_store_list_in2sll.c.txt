/*3.	SLL: Store the list of records in 2 singly linked lists according to gender. 
        Print all entries in each linked list.*/

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define N 50 

typedef struct node
{
    int id;
    char f_name[50];
    char l_name[50];
    char gender[10];
    char occupation[20];
    int age;
    struct node *next;
}club_mem;

void store_in_list(club_mem **head1,club_mem **head2,club_mem m);
void sort_list(club_mem **head);
void print(club_mem **head);
void release_memory(club_mem **head);

int main()
{
        FILE *fp;
        club_mem *head1 = NULL,*head2 = NULL;
        char buff1[N],buff2[N],buff3[N],buff4[N],buff5[N];
        int i;
    
        fp = fopen("Club_Membership_2020.txt","r");
        if(fp == NULL)
        {
            printf("Error\n");
            exit(1);
        }
    
       for(i=0; i<16; i++)
       {
           club_mem m;
           if(i == 0)
           fscanf(fp,"%s %s %s %s %s",buff1,buff2,buff3,buff4,buff5);
           else
           {
               fscanf(fp,"%d %s %s %s %s %d",&m.id,m.f_name,m.l_name,m.gender,m.occupation,&m.age);
               store_in_list(&head1,&head2,m);
           }
       }
   
       printf("Male sll:\n");
       printf("%s\t%s\t\t\t%s\t%s\t%s\n",buff1,buff2,buff3,buff4,buff5);
       print(&head1);
       printf("Female sll: \n");
       printf("%s\t%s\t\t\t%s\t%s\t%s\n",buff1,buff2,buff3,buff4,buff5);
       print(&head2);
   
       release_memory(&head1);
       release_memory(&head2);
       fclose(fp);
       return 0;
}

void store_in_list(club_mem **head1,club_mem **head2,club_mem m)
{
    club_mem *newnode,*temp;
    newnode = (club_mem *)malloc(sizeof(club_mem));
    if(newnode == NULL)
    printf("Unable to allocate memory\n");
    else 
    {
        newnode->id = m.id;
        strcpy(newnode->f_name,m.f_name);
        strcpy(newnode->l_name,m.l_name);
        strcpy(newnode->gender,m.gender);
        strcpy(newnode->occupation,m.occupation);
        newnode->age = m.age;
        newnode->next = NULL;
        if(strcmp(newnode->gender,"Male") == 0)
        {
            if(*head1 == NULL)
            *head1 = newnode;
            else
            {
                temp = *head1;
                while(temp->next != NULL)
                {
                    temp = temp->next;
                }
                temp->next = newnode;
            }
        }
        else
        {
            if(*head2 == NULL)
            *head2 = newnode;
            else
            {
                temp = *head2;
                while(temp->next != NULL)
                {
                    temp = temp->next;
                }
                temp->next = newnode;
            }
        }
    }
}

void print(club_mem **head)
{
    if(*head == NULL)
    printf("No data in the file\n");
    else
    {
        club_mem *temp = *head;
        while(temp != NULL)
        {
            printf("%d\t%s %s\t\t%s\t%s\t\t%d\n",temp->id,temp->f_name,temp->l_name,temp->gender,temp->occupation,temp->age);
            temp = temp->next;
        }
        printf("\n");
    }
}

void release_memory(club_mem **head)
{
    club_mem *temp,*temp1;
    temp = *head;
    while(temp != NULL)
    {
        temp1 = temp;
        temp = temp->next;
        free(temp1);
    }
}