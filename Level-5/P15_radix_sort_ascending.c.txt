 /* 15.	Implement Radix sort algorithm to sort an array in increasing way */

#include <stdio.h>
#define N 50

void radix_sort_ascending(int *arr,int n);
void count_sort(int *arr,int n,int pos);

int main()
{
    int arr[N],n,i;
    printf("Enter n value: ");
    scanf("%d",&n);
    printf("Enter array values: ");
    for(i=0; i<n; i++)
    {
        scanf("%d",(arr+i));
    }
    radix_sort_ascending(arr,n);
    printf("Array after sorting: ");
    for(i=0; i<n; i++)
    {
        printf("%d ",*(arr+i));
    }
    return 0;
}


void radix_sort_ascending(int *arr,int n)
{
    int max,i,pos;
    max = arr[0];
    for(i=1; i<n; i++)
    {
        if(arr[i] > max)
        max = arr[i];
    }
    for(pos=1; (max/pos)>0; (pos=pos*10))
    {
        count_sort(arr,n,pos);
    }
    
}

void count_sort(int *arr,int n,int pos)
{
    int count[10] = {0},b[N];
    int i;
    for(i=0; i<n; i++)
    count[(arr[i]/pos)%10]++;
    
    for(i=1; i<10; i++)
    count[i] = count[i] + count[i-1];
    
    for(i=n-1; i>=0; i--)
    b[--count[(arr[i]/pos)%10]] = arr[i];
    
    for(i=0; i<n; i++)
    arr[i] = b[i];
}
 
